package ru.ifmo.md.lesson4.tests;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.robolectric.RobolectricTestRunner;
import org.robolectric.annotation.Config;

import ru.ifmo.md.lesson4.CalculationEngine;
import ru.ifmo.md.lesson4.CalculationEngineFactory;
import ru.ifmo.md.lesson4.CalculationException;

import static junit.framework.Assert.assertEquals;
import static junit.framework.Assert.fail;

@Config(emulateSdk = 18)
@RunWith(RobolectricTestRunner.class)
public class DummyTest {
    private CalculationEngine evaluator;

    @Before
    public void setup() {
        evaluator = CalculationEngineFactory.defaultEngine();
    }

    @Test
    public void basicCorrectnessTests() {
        testParsingAndEvaluation(3d, "3.0");
        testParsingAndEvaluation(3d, "--3.0");
        testParsingAndEvaluation(3d, "((((((3))))))");
        testParsingAndEvaluation(-3d, "-9.0E1 / 3E1");
        testParsingAndEvaluation(3d, "+3.0");
        testParsingAndEvaluation(-3d, "+-3.0");
        testParsingAndEvaluation(150, "30 * 50 / 10.0");
        testParsingAndEvaluation(Double.NaN, "0 / 0");
        testParsingAndEvaluation(Double.POSITIVE_INFINITY, "100 / 0");
        testParsingAndEvaluation(-0.3508524642331231, "(((0.4364117975978621-0.40281545467958657)*0.9721065761964539)-(0.24029226252004365/((0.651213857166067/0.44119555174727654)-0.8494630475390561)))");
        testParsingAndEvaluation(2.2352761927868827, "(((0.4914936624211995/((0.853603372201043+(0.26149782205776206-0.41239216019861147))+0.4699771523489338))+0.5802125788285947)/0.44707244177501104)");
        testParsingAndEvaluation(-0.006105830610406159, "((((0.1014732527468909*(0.5282318456407088/((0.32067700313462455/0.15847878339692567)-0.02523383403867452)))/(((0.8464717097470239/((0.6735852534967111/0.5694205001321452)/(0.6884551059004806/0.5663865083148859)))-0.37420051201247784)*(((0.9396585872993639*0.2161664004558499)-(0.8779001339382775+(0.995376564422029-0.5120035147391865)))/(0.6804814640330322-(0.020958217939532897/0.5433529348522995)))))/(0.6334893445608178-(0.704211321019689-0.6591177351488486)))/((((0.9171071720624794+0.6580211288681194)+(0.07646658160922981+(((((0.5136986516155633-((0.1751941868962673+(0.6172470492338274-(0.6061371093725404-(0.8326597056423186/((0.6046343045110533+(((0.5241124295452675/(((((0.82795562516808*((0.6992229133234548/(0.6033721348851292-0.0646009993953921))+0.9007181553664281))*(((0.9818120496527986/(((0.4936791960925907+0.2941461084529704)*0.28414794826551293)-((0.5006689547501599-(0.2127632109359131-0.8411532751982363))-((0.09849073005675335*0.9076500009731331)+0.5595857624722158))))+0.1385451123793865)/0.254477680198701))*((0.1217059229569718*0.07063492744612887)+(0.9155606939915945-(0.997968825103101-(((((0.019462513406561688/0.17995904069107105)-0.08656990555660182)/0.4901106138624819)+0.008063778558967782)/(0.4308338246450415*0.007721388227131865))))))-(0.6168580224713597-0.8183696846596159))+(((0.698239110277119+(0.4986519634341814*0.7313727035403584))*(0.35885424938660593+0.40558554751949305))*(((0.6987331312151777-(0.144697188504317/0.1657506661218333))/0.7137386673727032)-0.3047457010383916))))-(((0.5669375480196198+((((((((0.43593888295207306/0.37313835516177596)*(((0.43442338583732687*(0.908204566393339-0.7354297870250514))*0.051895918615825876)-((0.22204157175384576*(((0.5872290363773801-(((0.35052079995138374*0.05794332397602875)/(0.9712041797726725/0.43495612231449554))+0.7619434869897155))-0.1193898731275479)+0.8507860703483415))+((0.5483248041484744-0.5967382258662733)+0.4175323380526921))))-0.2884880818716804)-((0.08383932079839407*(0.7169654148190577/0.4781858693254005))*(((((0.9489013772700742/0.8926300722397025)+((0.7142678542222288-(((0.17796505676550745+((0.03706718925578578-((0.4551553625148519-0.8965907629109441)/0.6146561677859141))*0.15283866391345946))-0.02220315288906416)*0.6811694026594257))+0.8649331909478465))*((0.07834054143045177-0.9753477915875991)-((((((0.3723771686135984*0.44346640682319494)*((0.7543342934910985-(0.37836503397945187-0.7597125601120469))+0.42271303367032775))*((0.33152632555546313/(0.2165654681403839/(0.8389766912261292+(((((0.04368650939156915-(0.10333965861794381-(0.9625750999658467-0.5529512958006905)))+0.24049957392411125)+0.5648549239604291)+(0.593412599540244-0.6033297143357615))+0.521980481899381))))+((((0.2887037089007629-0.42831954135990846)+0.27640005558489333)/0.448479390597041)-(0.28163831361849245*(0.02782943553793027+(((0.1639383552963014-0.9879912657914802)+(0.3292817550679572*0.954845611166285))/0.19630900414765118))))))*(0.4680305417006836/(0.6565869263280462/0.5320360902419484)))-0.0474521983342292)/0.5864528908885033)))+(0.20334696685935094-0.49315114341617017))-0.63226114468627)))+(0.1624048347974345/(((0.5743284505765579*0.9950743225224992)-(0.1313226979346448/0.9973347547774748))*0.44711263788118727)))-0.132890074589593)/0.6616890452968258)-0.68007493320751))/0.9761641317034477)/((0.8523473935014956*((0.10761518877279563/0.9196605702643312)-(0.8149532218386305/(0.6248112848796298+(((0.9088091613753608/(0.9984779979233873/((((0.0908066618564023+0.6493710412476306)*(0.26209950827270134-0.3751840894583305))-(0.6869074711453159-0.6047077020386765))-(0.7047428479810475+(0.053551174856237393/0.5276102327703286)))))*0.11979457017363648)-0.9711802747205143)))))*(0.42204438169786496+0.0015694141433370001))))-((0.25095342703941803-(0.1976517997884778-((0.3720929222817123+0.39452888236437833)/0.669607579331228)))/0.5344244569392904)))/0.7569912318065363)))))+(((0.5484919030612782/(0.10198632125147422-(0.12530858061880157+0.09132361205919748)))/((0.5463837829760123+0.9083018334671131)/0.07221069855131024))/0.33800852611588317)))-0.43983552236000867)/0.4073233766426583)-(0.7754347827968997/0.6929739364875477))/0.13580725959999207)))-(0.31757906981742456*((((((((((0.3615309146033099*(0.5018581580194768-0.9393721390508681))/(0.5070661183386546*((((((0.5933607840986167-0.5199663048017467)-((0.864353194933066+(0.786666935779102*0.6302084703052822))+0.8810280934267454))+(0.45909973616311917-0.15998794168542974))-0.232465602006815)/0.22669443126137623)-(0.7249346324820083*((0.5063679971687088*0.6250962364119237)-0.6094109356680759)))))-0.26267465639619825)-(0.4072904960578335*0.9105017238541366))-0.564231854701103)/(0.2634849331404595+0.3451213087583538))-(((0.08515421359868236+((0.40159416459225206/(0.08836434937658988/(0.3041426634394949-((0.44215460867117085*(0.27157160073454667/((0.229994256081002*0.3843863934666535)/(0.029849669072562035*((0.09465114967665156/0.9225640008835796)+0.2680096205316336)))))*0.17878024667161274))))*0.1969619619023283))+0.8336118470628322)/0.5713528756377272))*((0.7466094467874106-(0.8829029608422162/(0.9437752419532558*0.5739717345169216)))+(((((0.10304127436968669*0.417612042393826)-(((0.9137800567397472+(((((0.05968368017703096+(0.4136510535857214/0.15911480503025244))+0.519254565878624)+0.9541037156973087)+0.8371912509524707)-0.013673787646719004))*0.4525542773569986)/0.32121500806397685))-0.773301320854819)-0.568177631382461)-0.6924876353955746)))+(0.25098803198446107-0.4357482789857027))/(0.801233302303827*((0.5675257469180875-(0.7571769563766835*((((0.30565822246151864/(0.9561774811100142+0.06920269503550835))+0.8939899534337136)*0.26582897622112356)/0.6515314798987335)))+(0.6212992704373574/0.21418595610801705))))))*(((0.692067623857778-(((((0.9426175612774932/((0.09086289307227768*0.2789423305449683)+0.7503710736733045))-0.6107493539249005)-0.6936031237698276)/(0.2717031558385662/(0.8706491903361505+0.8489076637500901)))*0.910261125707388))+(0.43720511541359586+0.5393097846999214))+0.6004498939075864)))");
        testParsingAndEvaluation(-0.019027936610460174, "(((0.44246774498280383*(((0.7816291703747851-0.9374183260226954)/(0.33956888726719003*0.6835155116757928))+(((((0.19961049579939427/0.9807707064140001)/(0.5717486218774896+((0.24220058638869746*0.03460340456053301)/((((0.7392560064630254+(0.40114828632684685/0.20480011134966414))-((0.9517541059246556-0.6586998265324583)+(0.5314620950753166-0.6294055202639308)))*0.7988545636982909)/(0.45459801786933873/0.8149038819071832)))))/0.7501786998470934)*0.5624892984733364)*0.5202690821931041)))/((0.9648453965672756/(((0.9892913012203781*(0.113931440460603-(0.6254009935687889-0.4078000801016841)))+(0.31946625710845467/(0.6388933364783949-(0.9965711861571963/0.30184773822103184))))/(((0.6446014871950339-0.9238544660727901)+(0.7973010556352665-(0.34649413021672426+0.23345041997686777)))/0.08828579430936545)))*((0.9900145788816469/0.14740385650435028)-(0.276380803113229/0.3568013647098228))))/((0.19755748427559572-0.04473634046742281)/0.22272822012870852))");
    }

    @Test
    public void testFailures(){
        shouldFailOn("()");
        shouldFailOn("(5)(40)");
        shouldFailOn("1/");
        shouldFailOn("1 1");
        shouldFailOn("((1)");
        shouldFailOn("(+)");
        shouldFailOn("abcdefg");
        shouldFailOn("1 + a");
    }

    private void shouldFailOn(String expression) {
        try {
            evaluator.calculate(expression);
            fail("Expected to fail on " + expression);
        } catch (CalculationException ignored) {
        }
    }

    private void testParsingAndEvaluation(double answer, String expr){
        try {
            assertEquals(answer, evaluator.calculate(expr));
        } catch (CalculationException e) {
            fail("Exception happened " + e.getMessage());
        }
    }
}
